<?php
class Post
{
    private $conn;

    public function __construct($conn)
    {
        $this->conn = $conn;
    }

    // Create a new post
    public function create($title, $content)
    {
        $stmt = $this->conn->prepare("INSERT INTO posts (title, content) VALUES (?, ?)");
        $stmt->bind_param("ss", $title, $content);
        return $stmt->execute();
    }

    // Get all posts

    public function getAll($limit, $offset)
    {
        $query = "
        SELECT 
            posts.*, 
            categories.title AS category_name 
        FROM 
            posts 
        LEFT JOIN 
            categories 
        ON 
            posts.category_id = categories.id 
        ORDER BY 
            posts.id DESC 
        LIMIT ? OFFSET ?";

        $stmt = $this->conn->prepare($query);
        if (!$stmt) {
            die("Prepare failed: " . $this->conn->error);
        }

        // Bind parameters for limit and offset
        $stmt->bind_param("ii", $limit, $offset);

        // Execute the statement
        if (!$stmt->execute()) {
            die("Execute failed: " . $stmt->error);
        }

        // Fetch all results as an associative array
        return $stmt->get_result()->fetch_all(MYSQLI_ASSOC);
    }

    public function fetchCategory()
    {
        $categories = [];
        $result = $this->conn->query("SELECT id, title FROM categories ORDER BY title ASC");
        while ($row = $result->fetch_assoc()) {
            $categories[] = $row;
        }

        return $categories;
    }
    //Count total no of post
    public function getTotal()
    {
        $query = "SELECT COUNT(*) AS total FROM posts";
        $stmt = $this->conn->prepare($query);
        $stmt->execute();
        $result = $stmt->get_result();
        return $result->fetch_assoc()['total'];
    }


    // Get a post by ID
    public function getById($id)
    {
        $stmt = $this->conn->prepare("SELECT * FROM posts WHERE id = ?");
        $stmt->bind_param("i", $id);
        $stmt->execute();
        return $stmt->get_result()->fetch_assoc();
    }

    // Update a post
    public function update($id, $title, $content)
    {
        $stmt = $this->conn->prepare("UPDATE posts SET title = ?, content = ?, updated_at = CURRENT_TIMESTAMP WHERE id = ?");
        $stmt->bind_param("ssi", $title, $content, $id);
        return $stmt->execute();
    }

    // Delete a post
    public function delete($id)
    {
        $stmt = $this->conn->prepare("DELETE FROM posts WHERE id = ?");
        $stmt->bind_param("i", $id);
        return $stmt->execute();
    }

    //Search for a post
    public function getTotalPosts($search)
    {
        $search = "%$search%"; // Prepare search term
        $stmt = $this->conn->prepare("SELECT COUNT(*) FROM posts WHERE title LIKE ?");
        $stmt->bind_param('s', $search);
        $stmt->execute();
        $stmt->bind_result($totalPosts);
        $stmt->fetch();
        return $totalPosts;
    }

    // Search for posts by title or content
    public function search($keyword)
    {
        $stmt = $this->conn->prepare("SELECT * FROM posts WHERE title LIKE ? OR title LIKE ? ORDER BY id DESC");
        $searchTerm = "%" . $keyword . "%";
        $stmt->bind_param("ss", $searchTerm, $searchTerm);
        $stmt->execute();
        return $stmt->get_result()->fetch_all(MYSQLI_ASSOC);
    }

    function loginAdmin($username, $password)
    {

        $stmt = $this->conn->prepare("SELECT id, username, password FROM users WHERE username = ?");
        $stmt->bind_param("s", $username);
        $stmt->execute();
        $result = $stmt->get_result()->fetch_assoc();
        if ($result && password_verify($password, $result['password'])) {

            $_SESSION['admin_id'] = $result['id'];
            $_SESSION['username'] = $result['username'];
            return true;
        }
        return false;
    }
}
